name: Build Windows EXE

on:
  push:
    branches:
      - master

jobs:
  build-windows-exe:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install -r requirements.txt  # Install all dependencies from requirements.txt

      - name: Build Windows EXE
        run: |
          pyinstaller --onefile --icon=turingmachine.pro.ico turingmachine.pro.py  # Replace with the actual name of your Python script

      - name: Copy EXE to project root
        run: |
          cp dist/turingmachine.pro.exe ./turingmachine.pro.exe

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v2
        with:
          name: turingmachine.pro.exe
          path: turingmachine.pro.exe
      
      - name: Create Tools Directory
        run: |
          if (!(Test-Path -Path "C:\tools")) {
            mkdir "C:\tools"
          }

      - name: Install Inno Setup Compiler
        run: |
          if (!(Test-Path -Path "C:\tools")) {
            mkdir "C:\tools"
          }
          Invoke-WebRequest -Uri "https://www.jrsoftware.org/download.php/is-unicode.exe" -OutFile "C:\tools\is-unicode.exe"
          Invoke-Expression -Command "C:\tools\is-unicode.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-"
          Remove-Item "C:\tools\is-unicode.exe" -Force


      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: TuringMachineInstaller
          path: Output/TuringMachineSetup.exe
